{
  "version": 3,
  "sources": ["../../app/script.js"],
  "sourcesContent": ["document.addEventListener('DOMContentLoaded', () => {\n    const appDetailsModal = document.getElementById('app-details-modal');\n    const detailsContent = document.querySelector('.details-body');\n    const imageDialog = document.getElementById('image-dialog');\n    const fullscreenImage = document.getElementById('fullscreen-image');\n\n    const dialogClose = document.getElementById('close-dialog');\n\n    // Function to close the modal when clicking outside\n    function closeModalOnOutsideClick(modal) {\n        const backdrop = modal.querySelector('.modal-backdrop');\n        backdrop.addEventListener('click', () => {\n            modal.close();\n        });\n    }\n\n    // Apply the function to both modals\n    closeModalOnOutsideClick(appDetailsModal);\n    closeModalOnOutsideClick(imageDialog);\n\n    // Function to show app details\n    window.showAppDetails = function (name, apps) {\n        if (!Array.isArray(apps)) {\n            console.error('Apps data is not an array');\n            return;\n        }\n\n        const app = apps.find(app => (app.pkg_name || app.pkg_id) === name);\n        if (!app) {\n            console.error('App not found:', name);\n            return;\n        }\n\n        try {\n            // Show modal first\n            appDetailsModal.showModal();\n\n            // Update content\n            detailsContent.innerHTML = createAppDetails(app);\n\n            // Update URL with app details\n            const url = new URL(window.location);\n            url.searchParams.set('app', name);\n            history.pushState({ app: name }, '', url);\n        } catch (error) {\n            console.error('Error showing app details:', error);\n        }\n    };\n\n    function createAppDetails(app) {\n        // Initial skeleton loading state\n        const skeletonHtml = `\n            <div class=\"animate-pulse\">\n                <!-- Header skeleton with icon and title -->\n                <div class=\"flex items-start gap-4 mb-6\">\n                    <div class=\"skeleton w-16 h-16 rounded-lg\"></div>\n                    <div class=\"flex-1\">\n                        <div class=\"skeleton h-8 w-48 mb-4\"></div>\n                        <div class=\"skeleton h-4 w-full mb-2\"></div>\n                        <div class=\"skeleton h-4 w-3/4 mb-4\"></div>\n                        <div class=\"flex gap-2\">\n                            <div class=\"skeleton h-6 w-20\"></div>\n                            <div class=\"skeleton h-6 w-20\"></div>\n                            <div class=\"skeleton h-6 w-20\"></div>\n                        </div>\n                    </div>\n                </div>\n\n                <!-- Screenshots carousel skeleton -->\n                <div class=\"skeleton w-full h-64 mb-6 rounded-lg\"></div>\n\n                <!-- Stats skeleton -->\n                <div class=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                    <div class=\"skeleton h-24 w-full\"></div>\n                    <div class=\"skeleton h-24 w-full\"></div>\n                    <div class=\"skeleton h-24 w-full\"></div>\n                </div>\n\n                <!-- Action buttons skeleton -->\n                <div class=\"flex gap-2 mb-6\">\n                    <div class=\"skeleton h-12 w-32\"></div>\n                    <div class=\"skeleton h-12 w-32\"></div>\n                    <div class=\"skeleton h-12 w-32\"></div>\n                </div>\n\n                <!-- Install section skeleton -->\n                <div class=\"skeleton h-64 w-full rounded-lg\"></div>\n            </div>\n        `;\n\n        // Function to create the actual content\n        function createFinalContent(app) {\n            const categoryTags = app.categories\n                ? app.categories\n                    .split(',')\n                    .map(cat => cat.trim())\n                    .filter(cat => cat)\n                    .map(cat => `<span class=\"badge badge-neutral category-tag cursor-pointer\" data-category=\"${cat}\">${cat}</span>`)\n                    .join('')\n                : '';\n\n            // Format build date\n            const buildDate = new Date(app.build_date);\n            const formattedDate = buildDate.toLocaleDateString('es-AR', {\n                year: 'numeric',\n                month: 'short',\n                day: 'numeric'\n            });\n\n            // Parse and format rich description if available\n            const longDescriptionHTML = app.long_description\n                ? `\n                    <div class=\"rich-description mt-4 mb-6 prose max-w-none\">\n                        <h3 class=\"text-xl font-semibold mb-3\">About ${app.pkg_name || app.pkg_id}</h3>\n                        ${app.long_description.replace(/\\u003cp\\u003e/g, '<p>')}\n                    </div>\n                  `\n                : '';\n\n            return `\n                <div class=\"details-header flex items-start gap-4 mb-4\">\n                    <img src=\"${app.icon}\" alt=\"${app.pkg_name || app.pkg_id}\" class=\"app-icon w-16 h-16 object-contain\"\n                         onerror=\"this.style.display='none';\">\n                    <div>\n                        <h2 class=\"text-2xl font-semibold\">${app.pkg_name || app.pkg_id}</h2>\n                        <p>${app.description || 'No description available.'}</p>\n                        <div class=\"category-tags flex flex-wrap gap-2 mt-2\">${categoryTags}</div>\n                    </div>\n                </div>\n                ${longDescriptionHTML}\n                <div id=\"screenshots-container\" class=\"mb-4\">\n                    <div class=\"skeleton-container skeleton h-64\">\n                        <div class=\"flex items-center justify-center h-full text-base-content/50\">\n                            Loading screenshots...\n                        </div>\n                    </div>\n                    <div class=\"carousel-container hidden\"></div>\n                </div>\n                <div class=\"stats stats-horizontal shadow w-full bg-base-200 mb-4\">\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Version</div>\n                        <div class=\"stat-value text-2xl\">${app.version || 'N/A'}</div>\n                        <div class=\"stat-desc\">Latest Release</div>\n                    </div>\n\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Size</div>\n                        <div class=\"stat-value text-2xl\">${app.size}</div>\n                        <div class=\"stat-desc\">Download Size</div>\n                    </div>\n\n                    <div class=\"stat\">\n                        <div class=\"stat-title\">Build Date</div>\n                        <div class=\"stat-value text-2xl\">${formattedDate}</div>\n                        <div class=\"stat-desc\">Last Updated</div>\n                    </div>\n                </div>\n                <div class=\"app-links flex gap-2 mb-4\">\n                    <a href=\"${app.download_url}\" class=\"download-button btn btn-primary\">Download</a>\n                    ${app.src_urls && app.src_urls.length > 0 ? `<a href=\"${app.src_urls[0]}\" class=\"link-button btn btn-secondary\" target=\"_blank\">Source Code</a>` : ''}\n                    ${app.web_urls && app.web_urls.length > 0 ? `<a href=\"${app.web_urls[0]}\" class=\"link-button btn btn-secondary\" target=\"_blank\">Website</a>` : ''}\n                </div>\n                <div class=\"install-section p-4 bg-base-200 rounded-lg mb-4\">\n\n                <div class=\"tooltip tooltip-info tooltip-right\" data-tip=\"one-click-install requires dbin protocol to be set up correctly on your system\">\n                    <a href=\"dbin://install?${app.pkg_id}\" class=\"install-button btn btn-ghost text-lg\">Install <span class=\"nf nf-oct-desktop_download\"></span></a>\n                </div>\n\n                    <h4 class=\"text-base font-semibold mb-2\"># If you don't have <span class=\"code\">dbin</span> installed:</h4>\n                    <div class=\"code bg-base-300 p-2 rounded mb-4\">\n                        <pre data-prefix=\"$\"><code>wget -qO- \"https://raw.githubusercontent.com/xplshn/dbin/master/stubdl\" | sh -s -- install ${app.pkg_name || app.pkg_id}</code></pre>\n                    </div>\n                    <h4 class=\"text-base font-semibold mb-2\"># If you have <span class=\"code\">dbin</span> installed:</h4>\n                    <div class=\"code bg-base-300 p-2 rounded mb-4\">\n                        <pre data-prefix=\"$\"><code>dbin install ${app.pkg_id}</code></pre>\n                    </div>\n                    <h4 class=\"text-base font-semibold mb-2\"># Alternative using <span class=\"code\">soar</span>:</h4>\n                    <div class=\"code bg-base-300 p-2 rounded\">\n                        <pre data-prefix=\"$\"><code>soar add ${app.pkg_id}</code></pre>\n                    </div>\n                </div>\n                ${app.note ? `<div class=\"app-note alert alert-warning\"><strong>Note:</strong> ${app.note}</div>` : ''}\n            `;\n        }\n\n        // Function to create carousel HTML only for valid screenshots\n        function createCarouselHtml(screenshots) {\n            if (!Array.isArray(screenshots) || screenshots.length === 0) {\n                return Promise.resolve('<p>No screenshots available.</p>');\n            }\n\n            const loadingPromises = screenshots.map((src, index) =>\n                new Promise((resolve) => {\n                    const img = new Image();\n                    img.onload = () => resolve({ src, index, valid: true });\n                    img.onerror = () => resolve({ src, index, valid: false });\n                    img.src = src;\n                })\n            );\n\n            return Promise.all(loadingPromises)\n                .then(results => {\n                    const validScreenshots = results.filter(result => result.valid);\n\n                    if (validScreenshots.length === 0) {\n                        return '<p>No screenshots available.</p>';\n                    }\n\n                    let carouselHtml = '<div class=\"carousel w-full h-64 rounded-lg\">';\n                    validScreenshots.forEach((screenshot, idx) => {\n                        const slideId = `slide${idx + 1}`;\n                        const prevSlide = idx === 0 ? validScreenshots.length : idx;\n                        const nextSlide = idx === validScreenshots.length - 1 ? 1 : idx + 2;\n\n                        carouselHtml += `\n                            <div id=\"${slideId}\" class=\"carousel-item relative w-full\">\n                                <img src=\"${screenshot.src}\" class=\"w-full h-full object-contain cursor-pointer\" alt=\"Screenshot ${idx + 1}\" data-fullscreen-src=\"${screenshot.src}\"/>\n                                <div class=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">\n                                    <button data-target=\"slide${prevSlide}\" class=\"btn btn-circle prev-img\">\u276E</button>\n                                    <button data-target=\"slide${nextSlide}\" class=\"btn btn-circle next-img\">\u276F</button>\n                                </div>\n                            </div>\n                        `;\n                    });\n\n                    carouselHtml += '</div>';\n\n                    return carouselHtml;\n                });\n        }\n\n        // Initially show skeleton\n        detailsContent.innerHTML = skeletonHtml;\n\n        // After a small delay, load the actual content\n        setTimeout(() => {\n            detailsContent.innerHTML = createFinalContent(app);\n\n            // Then load the carousel\n            const screenshotsContainer = document.getElementById('screenshots-container');\n            if (screenshotsContainer) {\n                createCarouselHtml(app.screenshots).then(carouselHtml => {\n                    const skeletonContainer = screenshotsContainer.querySelector('.skeleton-container');\n                    const carouselContainer = screenshotsContainer.querySelector('.carousel-container');\n\n                    if (!carouselContainer) {\n                        console.log('error')\n                        return null\n                    }\n\n                    carouselContainer.innerHTML = carouselHtml;\n                    // Remove skeleton and show carousel\n                    skeletonContainer.remove();\n                    carouselContainer.classList.remove('hidden');\n\n                    // Add event listeners to carousel images\n                    carouselContainer.querySelectorAll('img').forEach(img => {\n                        img.addEventListener('click', () => {\n                            fullscreenImage.src = img.dataset.fullscreenSrc;\n                            imageDialog.showModal();\n                        });\n                    });\n\n                    // Add event listeners to carousel arrows to prevent default behavior\n                    carouselContainer.querySelectorAll('.prev-img, .next-img').forEach(button => {\n                        button.addEventListener('click', (e) => {\n                            const targetSlide = document.getElementById(button.dataset.target);\n                            if (targetSlide) {\n                                targetSlide.scrollIntoView({\n                                    behavior: 'smooth',\n                                    block: 'nearest',\n                                    inline: 'start'\n                                });\n                            }\n                        });\n                    });\n                });\n            }\n\n        }, 1000);\n\n        return skeletonHtml;\n    }\n});\n"],
  "mappings": "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",
  "names": ["appDetailsModal", "detailsContent", "imageDialog", "fullscreenImage", "dialogClose", "closeModalOnOutsideClick", "modal", "name", "apps", "app", "createAppDetails", "url", "error", "skeletonHtml", "createFinalContent", "categoryTags", "cat", "formattedDate", "longDescriptionHTML", "createCarouselHtml", "screenshots", "loadingPromises", "src", "index", "resolve", "img", "results", "validScreenshots", "result", "carouselHtml", "screenshot", "idx", "slideId", "prevSlide", "nextSlide", "screenshotsContainer", "skeletonContainer", "carouselContainer", "button", "e", "targetSlide"]
}
