{
  "version": 3,
  "sources": ["../script.js"],
  "sourcesContent": ["let apps = [];\nlet currentRepo = 'amd64';\n\nexport function setApps(newApps) {\n    apps = newApps;\n}\n\nexport function getApps() {\n    return apps;\n}\n\nfunction createLoadingSkeleton() {\n    return `\n        <!-- Trending Section Skeleton -->\n        <div class=\"space-y-4 my-4\">\n            <div class=\"skeleton h-8 w-32\"></div>\n            <div class=\"skeleton h-64 w-full rounded-xl\"></div>\n        </div>\n\n        <!-- Categories Section Skeletons -->\n        ${Array(3).fill().map(() => `\n            <div class=\"my-8 space-y-4\">\n                <!-- Category Title Skeleton -->\n                <div class=\"skeleton h-8 w-48\"></div>\n\n                <!-- App Cards Grid Skeleton -->\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    ${Array(6).fill().map(() => `\n                        <div class=\"card card-side bg-base-100 shadow-xl\">\n                            <!-- App Icon Skeleton -->\n                            <figure class=\"hidden sm:block w-24 h-24 p-4\">\n                                <div class=\"skeleton w-full h-full rounded-lg\"></div>\n                            </figure>\n\n                            <!-- App Content Skeleton -->\n                            <div class=\"card-body\">\n                                <div class=\"hidden sm:block space-y-3\">\n                                    <div class=\"skeleton h-4 w-3/4\"></div>\n                                    <div class=\"skeleton h-3 w-full\"></div>\n                                    <div class=\"skeleton h-3 w-5/6\"></div>\n                                </div>\n\n                                <div class=\"sm:hidden lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n                            </div>\n                        </div>\n                    `).join('')}\n                </div>\n            </div>\n        `).join('')}\n    `;\n}\n\ndocument.addEventListener('DOMContentLoaded', async () => {\n    const appSections = document.getElementById('app-sections');\n    const searchInput = document.getElementById('desktop-search-input');\n    const mobileSearchInput = document.getElementById('mobile-search-input');\n    const repoAmd64 = document.getElementById('repo-amd64');\n    const repoArm64 = document.getElementById('repo-arm64');\n    const fileInput = document.getElementById('file-input');\n    const uploadButton = document.getElementById('upload-button');\n\n    let categories = new Map();\n\n    // Fetch app data from the provided URL\n    async function fetchAppData() {\n        if (!appSections) return;\n        const popularAppsCarousel = document.getElementById('popular-apps-carousel');\n\n        // Show loading state\n        appSections.innerHTML = createLoadingSkeleton();\n        if (popularAppsCarousel) {\n            popularAppsCarousel.innerHTML = ''; // Clear carousel while loading\n        }\n\n        try {\n            const response = await fetch(`https://fatbuffalo.neocities.org/AppBundleHUBStore/METADATA_${currentRepo}_linux.json`);\n\n            if (!response.ok) {\n                throw new Error('Network response was not ok');\n            }\n\n            const data = await response.json();\n            const allApps = [];\n            for (const key in data) {\n                if (Array.isArray(data[key])) {\n                    allApps.push(...data[key]);\n                }\n            }\n            setApps(allApps);\n            processCategories();\n            initializeFromUrl(); // Initialize state from URL after data is fetched.\n            displayPopularApps();\n            displayApps();\n        } catch (error) {\n            console.error('Error fetching app data:', error);\n            appSections.innerHTML = '<div class=\"error\">Failed to load applications. Please try again later.</div>';\n        }\n    }\n\n    // Initialize app state from URL parameters\n    function initializeFromUrl() {\n        const url = new URL(window.location);\n        const initialSearch = url.searchParams.get('search') || '';\n        const initialApp = url.searchParams.get('app') || '';\n\n        displayApps(initialSearch);\n\n        if (initialApp) {\n            showAppDetails(initialApp, getApps());\n        }\n    }\n\n    // Process categories from apps\n    function processCategories() {\n\t    categories.clear();\n\t    const apps = getApps();\n\t    if (apps.length === 0) {\n\t        console.error('No apps found in the data');\n\t        return;\n\t    }\n\t    apps.forEach(app => {\n\t        if (app.categories) {\n\t            const appCategories = app.categories.split(',').map(cat => cat.trim());\n\t            appCategories.forEach(category => {\n\t                if (category) {\n\t                    const count = categories.get(category) || 0;\n\t                    categories.set(category, count + 1);\n\t                }\n\t            });\n\t        }\n\t    });\n\n\t}\n\n    // Create app card HTML\n    function createAppCard(app) {\n        const isPortable = app.pkg.endsWith('.NixAppImage') || app.pkg.endsWith('.FlatImage') || app.pkg.endsWith('.AppBundle');\n        let badgeColor;\n        if (app.pkg.endsWith('.NixAppImage')) {\n            badgeColor = 'badge-warning';\n        } else if (app.pkg.endsWith('.FlatImage')) {\n            badgeColor = 'badge-info';\n        } else if (app.pkg.endsWith('.AppBundle')) {\n            badgeColor = 'badge-success';\n        }\n\n        return `\n            <div class=\"card cursor-pointer card-normal card-side bg-base-100 shadow-xl\" data-name=\"${app.pkg_name || app.pkg_id}\">\n                <figure class=\"w-24 h-24 mt-4\">\n                    <img\n                        src=\"${app.icon}\"\n                        alt=\"${app.pkg_name || app.pkg_id}\"\n                        class=\"w-full h-full object-contain rounded-md\"\n                        loading=\"lazy\"\n                        onerror=\"this.style.display='none';\"\n                    >\n                </figure>\n                <div class=\"card-body\">\n                    <h2 class=\"card-title\">\n                        ${app.pkg_name || app.pkg_id}\n                        ${isPortable ? `<span class=\"badge ${badgeColor}\">Portable</span>` : ''}\n                    </h2>\n                    <p>${app.description || 'No description available.'}</p>\n                </div>\n            </div>\n        `;\n    }\n\n    // Display the apps in the sections\n    function displayApps(searchTerm = '') {\n        if (!appSections) return;\n        let filteredApps = getApps();\n\n        if (searchTerm) {\n            const term = searchTerm.toLowerCase();\n            filteredApps = filteredApps.filter(app =>\n                (app.pkg_name && app.pkg_name.toLowerCase().includes(term)) ||\n                (app.description && app.description.toLowerCase().includes(term)) ||\n                (app.categories && app.categories.toLowerCase().includes(term))\n            );\n        }\n\n        const displayedApps = new Set();\n        let appSectionsHTML = '';\n\n        categories.forEach((count, category) => {\n            // Filter apps for this category\n            const categoryApps = filteredApps.filter(app => {\n                if (!app.categories) return false;\n                const appCategories = app.categories.split(',').map(cat => cat.trim());\n                return appCategories.includes(category) && !displayedApps.has(app.pkg_name || app.pkg_id);\n            });\n\n            // Skip if there are no apps in this category\n            if (categoryApps.length === 0) {\n                return;\n            }\n\n            // Collect the first six apps and mark them as displayed\n            const firstSixApps = categoryApps.slice(0, 6);\n            firstSixApps.forEach(app => displayedApps.add(app.pkg_name || app.pkg_id));\n\n            // Generate HTML for app cards\n            const appCards = firstSixApps.map(app => createAppCard(app)).join('');\n\n            // Generate the section HTML\n            appSectionsHTML += `\n                <div class=\"category-section my-8\">\n                    <h2 class=\"category-title text-xl font-semibold mb-4\">${category}</h2>\n                    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                        ${appCards}\n                    </div>\n                    ${categoryApps.length > 6 ? `<button class=\"see-more-btn btn btn-outline shadow-xl btn-xs sm:btn-sm md:btn-md lg:btn-lg\" data-category=\"${category}\">See more ${category}</button>` : ''}\n                </div>\n            `;\n        });\n\n        // Update the inner HTML of the app sections\n        appSections.innerHTML = appSectionsHTML;\n\n        // Add event listeners to app cards\n        appSections.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('click', (e) => {\n                const appName = e.currentTarget.dataset.name;\n                showAppDetails(appName, getApps());\n            });\n        });\n\n        // Add event listeners to \"See more\" buttons\n        appSections.querySelectorAll('.see-more-btn').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const category = e.target.dataset.category;\n                showAllAppsInCategory(category);\n            });\n        });\n\n        // Lazy load images\n        const lazyImages = [].slice.call(document.querySelectorAll('img.lazyload'));\n        if ('IntersectionObserver' in window) {\n            let lazyImageObserver = new IntersectionObserver(function (entries, observer) {\n                entries.forEach(function (entry) {\n                    if (entry.isIntersecting) {\n                        let lazyImage = entry.target;\n                        lazyImage.src = lazyImage.dataset.src;\n                        lazyImage.classList.remove('lazyload');\n                        lazyImageObserver.unobserve(lazyImage);\n                    }\n                });\n            });\n\n            lazyImages.forEach(function (lazyImage) {\n                lazyImageObserver.observe(lazyImage);\n            });\n        } else {\n            // Fallback for older browsers\n            lazyImages.forEach(function (lazyImage) {\n                lazyImage.src = lazyImage.dataset.src;\n                lazyImage.classList.remove('lazyload');\n            });\n        }\n    }\n\n    // Show all apps in a specific category\n    function showAllAppsInCategory(category) {\n        if (!appSections) return;\n        const categoryApps = getApps().filter(app => {\n            if (!app.categories) return false;\n            const appCategories = app.categories.split(',').map(cat => cat.trim());\n            return appCategories.includes(category);\n        });\n\n        const appCards = categoryApps.map(app => createAppCard(app)).join('');\n\n        appSections.innerHTML = `\n            <div class=\"category-section my-8\">\n                <h2 class=\"category-title text-xl font-semibold mb-4\">${category}</h2>\n                <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                    ${appCards}\n                </div>\n                <button class=\"see-more-btn btn btn-outline shadow-xl btn-xs sm:btn-sm md:btn-md lg:btn-lg\" onclick=\"window.history.back()\">Close</button>\n            </div>\n        `;\n\n        // Add event listeners to app cards\n        appSections.querySelectorAll('.card').forEach(card => {\n            card.addEventListener('click', (e) => {\n                const appName = e.currentTarget.dataset.name;\n                showAppDetails(appName, getApps());\n            });\n        });\n    }\n\n    // Event Listeners\n    if (searchInput) {\n        searchInput.addEventListener('input', (e) => {\n            const searchTerm = e.target.value;\n            displayApps(searchTerm);\n\n            // Update URL with search term\n            const url = new URL(window.location);\n            url.searchParams.set('search', searchTerm);\n            history.pushState({ search: searchTerm }, '', url);\n        });\n    }\n\n    if (mobileSearchInput) {\n        mobileSearchInput.addEventListener('input', (e) => {\n            const searchTerm = e.target.value;\n            displayApps(searchTerm);\n\n            // Update URL with search term\n            const url = new URL(window.location);\n            url.searchParams.set('search', searchTerm);\n            history.pushState({ search: searchTerm }, '', url);\n        });\n    }\n\n    // Repository Selection Event Listeners\n    if (repoAmd64) {\n        repoAmd64.addEventListener('click', () => {\n            currentRepo = 'amd64';\n            fetchAppData();\n        });\n    }\n\n    if (repoArm64) {\n        repoArm64.addEventListener('click', () => {\n            currentRepo = 'arm64';\n            fetchAppData();\n        });\n    }\n\n    // File Input Event Listener\n    if (uploadButton) {\n        uploadButton.addEventListener('click', () => {\n            if (fileInput) {\n                fileInput.click();\n            }\n        });\n    }\n\n    if (fileInput) {\n        fileInput.addEventListener('change', (e) => {\n            const file = e.target.files[0];\n            if (file) {\n                const reader = new FileReader();\n                reader.onload = async (event) => {\n                    try {\n                        const data = JSON.parse(event.target.result);\n                        if (!data || typeof data !== 'object') {\n                            throw new Error('Invalid JSON structure: root should be an object');\n                        }\n                        const allApps = [];\n                        for (const key in data) {\n                            if (Array.isArray(data[key])) {\n                                allApps.push(...data[key]);\n                            }\n                            //console.log(data[key]);\n                        }\n                        setApps(allApps);\n                        processCategories();\n                        initializeFromUrl(); // Initialize state from URL after data is fetched.\n                        displayPopularApps();\n                        displayApps();\n                    } catch (error) {\n                        console.error('Error parsing JSON file:', error);\n                        if (appSections) {\n                            appSections.innerHTML = '<div class=\"error\">Failed to load applications. Please ensure the file is a valid JSON object with arrays as values.</div>';\n                        }\n                    }\n                };\n                reader.readAsText(file);\n            }\n        });\n    }\n\n    // Initial load\n    fetchAppData();\n\n    // Handle popstate event to sync URL with app state\n    window.addEventListener('popstate', (e) => {\n        const url = new URL(window.location);\n        const search = url.searchParams.get('search') || '';\n        const app = url.searchParams.get('app') || '';\n\n        displayApps(search);\n\n        if (app) {\n            showAppDetails(app, getApps());\n        } else {\n            closeDetails();\n        }\n    });\n\n    function closeDetails() {\n        const appDetails = document.querySelector('.app-details');\n        if (appDetails) {\n            appDetails.classList.add('hidden');\n\n            // Update URL to remove app details\n            const url = new URL(window.location);\n            url.searchParams.delete('app');\n            history.pushState({}, '', url);\n        }\n    }\n\n    function displayPopularApps() {\n        const popularAppsCarousel = document.getElementById('popular-apps-carousel');\n        if (!popularAppsCarousel) return null;\n\n        popularAppsCarousel.innerHTML = `\n        <h2 class=\"text-2xl font-bold my-4\">Trending</h2>\n        <div class=\"carousel shadow-xl rounded-xl w-full h-64\">\n            <div class=\"w-full h-full flex items-center justify-center\">\n                <div class=\"lds-ellipsis\"><div></div><div></div><div></div><div></div></div>\n            </div>\n        </div>\n    `;\n\n        const popularApps = getApps()\n            .sort((a, b) => b.rank - a.rank)\n            .slice(0, 10);\n\n        // Function to validate screenshots\n        const validateScreenshots = (app) => {\n            return Array.isArray(app.screenshots) &&\n                app.screenshots.length > 0 &&\n                app.screenshots.some(screenshot => screenshot && screenshot.trim() !== '');\n        };\n\n        // Filter apps with valid screenshots\n        const appsWithValidScreenshots = popularApps.filter(validateScreenshots);\n\n        // If no valid apps found, show an error state\n        if (appsWithValidScreenshots.length === 0) {\n            popularAppsCarousel.innerHTML = `\n                <h2 class=\"text-2xl font-bold my-4\">Trending</h2>\n                <div class=\"alert alert-warning\">\n                    <span>No trending apps available at the moment.</span>\n                </div>\n            `;\n            return;\n        }\n\n        // Create promises for carousel HTML\n        let carouselPromises = appsWithValidScreenshots.map((app, index) =>\n            createCarouselHtml(app, index, appsWithValidScreenshots)\n        );\n\n        Promise.all(carouselPromises).then((carouselItems) => {\n            const carouselHTML = carouselItems.join('');\n\n            popularAppsCarousel.innerHTML = `\n            <h2 class=\"text-2xl font-bold my-4\">Trending</h2>\n                <div class=\"carousel shadow-xl rounded-xl w-full h-64 carousel-end w-full\">\n                    ${carouselHTML}\n                </div>\n            `;\n\n            // Attach event listeners after content is loaded\n            attachCarouselEventListeners();\n        });\n    }\n\n    function createCarouselHtml(app, index, popularApps) {\n        let loadingPromises = app.screenshots.map((src) =>\n            new Promise((resolve) => {\n                let img = new Image();\n                img.onload = () => resolve({ src, valid: true });\n                img.onerror = () => resolve({ src, valid: false });\n                img.src = src;\n            })\n        );\n\n        return Promise.all(loadingPromises).then(results => {\n            const validScreenshots = results.filter(result => result.valid);\n\n            if (validScreenshots.length === 0) {\n                return null;\n            }\n\n            const firstValidScreenshot = validScreenshots[0].src;\n            const slideId = `slide${index + 1}`;\n            const prevSlide = index === 0 ? popularApps.length : index;\n            const nextSlide = index === popularApps.length - 1 ? 1 : index + 2;\n\n            return `\n                <div id=\"${slideId}\"\n                     class=\"carousel-item relative w-full cursor-pointer\"\n                     data-name=\"${app.pkg_name || app.pkg_id}\">\n                    <div class=\"flex flex-col lg:flex-row justify-center w-full gap-4 p-4\">\n                        <div class=\"lg:w-1/3 flex items-center flex-col justify-center space-y-4\">\n                            <div class=\"flex items-center space-x-4\">\n                                <img src=\"${app.icon}\"\n                                     alt=\"${app.pkg_name || app.pkg_id}\"\n                                     class=\"w-16 h-16 object-contain\">\n                                <h3 class=\"text-lg sm:text-xl font-semibold\">${app.pkg_name || app.pkg_id}</h3>\n                            </div>\n                            <p class=\"text-sm sm:text-base\">${app.description || 'No description available.'}</p>\n                        </div>\n                        <div class=\"hidden lg:block lg:w-2/3 relative\">\n                            <div class=\"w-full h-48 overflow-hidden rounded-lg\">\n                                <img src=\"${firstValidScreenshot}\"\n                                     alt=\"Screenshot\"\n                                     class=\"w-full h-full object-cover bg-base-200\">\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"flex absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">\n                        <button class=\"btn btn-circle carousel-prev\" data-target=\"slide${prevSlide}\">\u276E</button>\n                        <button class=\"btn btn-circle carousel-next\" data-target=\"slide${nextSlide}\">\u276F</button>\n                    </div>\n                </div>\n            `;\n        });\n    }\n\n    function attachCarouselEventListeners() {\n        const carousel = document.getElementById('popular-apps-carousel');\n        if (!carousel) return;\n\n        carousel.querySelectorAll('.carousel-prev, .carousel-next').forEach(button => {\n            button.addEventListener('click', (e) => {\n                const targetSlide = document.getElementById(button.dataset.target);\n                if (targetSlide) {\n                    targetSlide.scrollIntoView({\n                        behavior: 'smooth',\n                        block: 'nearest',\n                        inline: 'start'\n                    });\n                }\n            });\n        });\n\n        carousel.querySelectorAll('.carousel-item').forEach(item => {\n            item.addEventListener('click', (e) => {\n                if (!e.target.closest('.carousel-prev') && !e.target.closest('.carousel-next')) {\n                    const appName = item.dataset.name;\n                    if (appName) {\n                        showAppDetails(appName, getApps());\n                    }\n                }\n            });\n        });\n\n        let currentSlideIndex = 0;\n        const slides = carousel.querySelectorAll('.carousel-item');\n\n        function autoScroll() {\n            const carouselContainer = carousel.querySelector('.carousel');\n            if (!carouselContainer) return;\n            currentSlideIndex = (currentSlideIndex + 1) % slides.length;\n            const targetSlide = slides[currentSlideIndex];\n            const offsetLeft = targetSlide.offsetLeft;\n            carouselContainer.scrollTo({\n                left: offsetLeft,\n                behavior: 'smooth'\n            });\n        }\n\n        let autoScrollInterval = setInterval(autoScroll, 5000);\n\n        carousel.addEventListener('mouseenter', () => {\n            clearInterval(autoScrollInterval);\n        });\n\n        carousel.addEventListener('mouseleave', () => {\n            autoScrollInterval = setInterval(autoScroll, 5000);\n        });\n    }\n});\n"],
  "mappings": "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",
  "names": ["apps", "currentRepo", "setApps", "newApps", "getApps", "createLoadingSkeleton", "appSections", "searchInput", "mobileSearchInput", "repoAmd64", "repoArm64", "fileInput", "uploadButton", "categories", "fetchAppData", "popularAppsCarousel", "response", "data", "allApps", "key", "processCategories", "initializeFromUrl", "displayPopularApps", "displayApps", "error", "url", "initialSearch", "initialApp", "app", "cat", "category", "count", "createAppCard", "isPortable", "badgeColor", "searchTerm", "filteredApps", "term", "displayedApps", "appSectionsHTML", "categoryApps", "firstSixApps", "appCards", "card", "e", "appName", "button", "showAllAppsInCategory", "lazyImages", "lazyImageObserver", "entries", "observer", "entry", "lazyImage", "file", "reader", "event", "search", "closeDetails", "appDetails", "popularApps", "a", "b", "validateScreenshots", "screenshot", "appsWithValidScreenshots", "carouselPromises", "index", "createCarouselHtml", "carouselItems", "carouselHTML", "attachCarouselEventListeners", "loadingPromises", "src", "resolve", "img", "results", "validScreenshots", "result", "firstValidScreenshot", "slideId", "prevSlide", "nextSlide", "carousel", "targetSlide", "item", "currentSlideIndex", "slides", "autoScroll", "carouselContainer", "offsetLeft", "autoScrollInterval"]
}
